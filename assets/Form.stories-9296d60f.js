import{S as M,i as I,s as L,c as p,a as T,m as i,b as S,t as d,d as g,e as b,f as c,g as D,h as B,j as x}from"./index-88099bba.js";import{g as j,a as q}from"./spread-8a54911c.js";import{p as C,M as E,T as O,S as v,f as k,g as z,h as G,B as H}from"./collect-stories-a5d29a75.js";import{F as A}from"./DateInput-40af5ffe.js";import{c as F}from"./helpers-5fa58f44.js";function J(n){let s;return{c(){s=x("Submit")},m(o,r){S(o,s,r)},d(o){o&&b(s)}}}function K(n){let s,o,r,u,a,$,m,_;return s=new k({props:{label:"first",name:"first"}}),r=new z({props:{label:"second",name:"second",rows:4}}),a=new G({props:{label:"third",name:"third"}}),m=new H({props:{raised:!0,$$slots:{default:[J]},$$scope:{ctx:n}}}),{c(){p(s.$$.fragment),o=T(),p(r.$$.fragment),u=T(),p(a.$$.fragment),$=T(),p(m.$$.fragment)},m(t,f){i(s,t,f),S(t,o,f),i(r,t,f),S(t,u,f),i(a,t,f),S(t,$,f),i(m,t,f),_=!0},p(t,f){const e={};f&2&&(e.$$scope={dirty:f,ctx:t}),m.$set(e)},i(t){_||(d(s.$$.fragment,t),d(r.$$.fragment,t),d(a.$$.fragment,t),d(m.$$.fragment,t),_=!0)},o(t){g(s.$$.fragment,t),g(r.$$.fragment,t),g(a.$$.fragment,t),g(m.$$.fragment,t),_=!1},d(t){t&&(b(o),b(u),b($)),c(s,t),c(r,t),c(a,t),c(m,t)}}}function N(n){let s,o;const r=[n[0]];let u={$$slots:{default:[K]},$$scope:{ctx:n}};for(let a=0;a<r.length;a+=1)u=D(u,r[a]);return s=new A({props:u}),s.$on("submit",function(){B(n[0]["on:submit"])&&n[0]["on:submit"].apply(this,arguments)}),{c(){p(s.$$.fragment)},m(a,$){i(s,a,$),o=!0},p(a,$){n=a;const m=$&1?j(r,[q(n[0])]):{};$&2&&(m.$$scope={dirty:$,ctx:n}),s.$set(m)},i(a){o||(d(s.$$.fragment,a),o=!0)},o(a){g(s.$$.fragment,a),o=!1},d(a){c(s,a)}}}function P(n){let s,o,r,u,a,$,m,_,t,f;return s=new E({props:{tags:["autodocs"],title:"Molecule/Form",component:A}}),r=new O({props:{$$slots:{default:[N,({args:e})=>({0:e}),({args:e})=>e?1:0]},$$scope:{ctx:n}}}),a=new v({props:{name:"Default",args:n[0]}}),m=new v({props:{name:"Id",args:F(n[0],{id:"123"})}}),t=new v({props:{name:"Save To Local Storage",args:F(n[0],{saveToLocalStorage:!0})}}),{c(){p(s.$$.fragment),o=T(),p(r.$$.fragment),u=T(),p(a.$$.fragment),$=T(),p(m.$$.fragment),_=T(),p(t.$$.fragment)},m(e,l){i(s,e,l),S(e,o,l),i(r,e,l),S(e,u,l),i(a,e,l),S(e,$,l),i(m,e,l),S(e,_,l),i(t,e,l),f=!0},p(e,[l]){const y={};l&3&&(y.$$scope={dirty:l,ctx:e}),r.$set(y)},i(e){f||(d(s.$$.fragment,e),d(r.$$.fragment,e),d(a.$$.fragment,e),d(m.$$.fragment,e),d(t.$$.fragment,e),f=!0)},o(e){g(s.$$.fragment,e),g(r.$$.fragment,e),g(a.$$.fragment,e),g(m.$$.fragment,e),g(t.$$.fragment,e),f=!1},d(e){e&&(b(o),b(u),b($),b(_)),c(s,e),c(r,e),c(a,e),c(m,e),c(t,e)}}}function Q(n){return[{class:"",id:"",saveToLocalStorage:!1,"on:submit"(o){alert("submitted successfully, form will now reset and remove any saved values"),o.target.reset()}}]}class R extends M{constructor(s){super(),I(this,s,Q,P,L,{})}}const w=C(R,{meta:{title:"Molecule/Form",tags:["autodocs"]},stories:{"tpl:default":{name:"default",template:!0,source:`<Form on:submit={args['on:submit']} {...args}>
  <TextField label="first" name="first" />

  <TextArea label="second" name="second" rows={4} />

  <MoneyInput label="third" name="third" />

  <Button raised>Submit</Button>
</Form>`,hasArgs:!0},Default:{name:"Default",template:!1,source:"",hasArgs:!1},Id:{name:"Id",template:!1,source:"",hasArgs:!1},SaveToLocalStorage:{name:"Save To Local Storage",template:!1,source:"",hasArgs:!1}},allocatedIds:["default","Meta","Template","Story","TextField","MoneyInput","TextArea","Button","Form","copyAndModifyArgs"]}),Z=w.meta,h=["Default","Id","SaveToLocalStorage"],ee=w.stories.Default,te=w.stories.Id,se=w.stories.SaveToLocalStorage;export{ee as Default,te as Id,se as SaveToLocalStorage,h as __namedExportsOrder,Z as default};
